"""
  Generated by Eclipse Cyclone DDS idlc Python Backend
  Cyclone DDS IDL version: v0.11.0
  Module: unitree_go.msg.dds_
  IDL file: SportModeState_.idl

"""

from enum import auto
from typing import TYPE_CHECKING, Optional
from dataclasses import dataclass, field

import cyclonedds.idl as idl
import cyclonedds.idl.annotations as annotate
import cyclonedds.idl.types as types

# root module import for resolving types
from unitree_dds_wrapper.idl import unitree_go


@dataclass
@annotate.final
@annotate.autoid("sequential")
class SportModeState_(idl.IdlStruct, typename="unitree_go.msg.dds_.SportModeState_"):
    stamp: 'unitree_dds_wrapper.idl.unitree_go.msg.dds_.TimeSpec_' = field(default_factory=lambda: unitree_go.msg.dds_.TimeSpec_())
    error_code: types.uint32 = field(default_factory=lambda: 0)
    imu_state: 'unitree_dds_wrapper.idl.unitree_go.msg.dds_.IMUState_' = field(default_factory=lambda: unitree_go.msg.dds_.IMUState_())
    mode: types.uint8 = field(default_factory=lambda: 0)
    progress: types.float32 = field(default_factory=lambda: 0)
    gait_type: types.uint8 = field(default_factory=lambda: 0)
    foot_raise_height: types.float32 = field(default_factory=lambda: 0)
    position: types.array[types.float32, 3] = field(default_factory=lambda: [0, 0, 0])
    body_height: types.float32 = field(default_factory=lambda: 0)
    velocity: types.array[types.float32, 3] = field(default_factory=lambda: [0, 0, 0])
    yaw_speed: types.float32 = field(default_factory=lambda: 0)
    range_obstacle: types.array[types.float32, 4] = field(default_factory=lambda: [0, 0, 0, 0])
    foot_force: types.array[types.int16, 4] = field(default_factory=lambda: [0, 0, 0, 0])
    foot_position_body: types.array[types.float32, 12] = field(default_factory=lambda: [0 for _ in range(12)])
    foot_speed_body: types.array[types.float32, 12] = field(default_factory=lambda: [0 for _ in range(12)])
    path_point: types.array['unitree_dds_wrapper.idl.unitree_go.msg.dds_.PathPoint_', 10] = field(default_factory=lambda: [unitree_go.msg.dds_.PathPoint_() for _ in range(10)])


