"""
  Generated by Eclipse Cyclone DDS idlc Python Backend
  Cyclone DDS IDL version: v0.11.0
  Module: unitree_go.msg.dds_
  IDL file: LowState_.idl

"""

from enum import auto
from typing import TYPE_CHECKING, Optional
from dataclasses import dataclass, field

import cyclonedds.idl as idl
import cyclonedds.idl.annotations as annotate
import cyclonedds.idl.types as types

# root module import for resolving types
from unitree_dds_wrapper.idl import unitree_go

@dataclass
@annotate.final
@annotate.autoid("sequential")
class LowState_(idl.IdlStruct, typename="unitree_go.msg.dds_.LowState_"):
    head: types.array[types.uint8, 2] = field(default_factory=lambda: [0, 0])
    level_flag: types.uint8 = field(default_factory=lambda: 0)
    frame_reserve: types.uint8 = field(default_factory=lambda: 0)
    sn: types.array[types.uint32, 2] = field(default_factory=lambda: [0, 0])
    version: types.array[types.uint32, 2] = field(default_factory=lambda: [0, 0])
    bandwidth: types.uint16 = field(default_factory=lambda: 0)
    imu_state: 'unitree_dds_wrapper.idl.unitree_go.msg.dds_.IMUState_' = field(default_factory=lambda: unitree_go.msg.dds_.IMUState_())
    motor_state: types.array['unitree_dds_wrapper.idl.unitree_go.msg.dds_.MotorState_', 20] = field(default_factory=lambda: [unitree_go.msg.dds_.MotorState_() for _ in range(20)])
    bms_state: 'unitree_dds_wrapper.idl.unitree_go.msg.dds_.BmsState_' = field(default_factory=lambda: unitree_go.msg.dds_.BmsState_())
    foot_force: types.array[types.int16, 4] = field(default_factory=lambda: [0 for _ in range(4)])
    foot_force_est: types.array[types.int16, 4] = field(default_factory=lambda: [0 for _ in range(4)])
    tick: types.uint32 = field(default_factory=lambda: 0)
    wireless_remote: types.array[types.uint8, 40] = field(default_factory=lambda: [0 for _ in range(40)])
    bit_flag: types.uint8 = field(default_factory=lambda: 0)
    adc_reel: types.float32 = field(default_factory=lambda: 0)
    temperature_ntc1: types.uint8 = field(default_factory=lambda: 0)
    temperature_ntc2: types.uint8 = field(default_factory=lambda: 0)
    power_v: types.float32 = field(default_factory=lambda: 0)
    power_a: types.float32 = field(default_factory=lambda: 0)
    fan_frequency: types.array[types.uint16, 4] = field(default_factory=lambda: [0 for _ in range(4)])
    reserve: types.uint32 = field(default_factory=lambda: 0)
    crc: types.uint32 = field(default_factory=lambda: 0)


    